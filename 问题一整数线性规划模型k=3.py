#!/usr/bin/env python
# coding: utf-8

# 第一关的k=3的测试结果，直接运行即可。

import cvxpy as cp
import numpy as np

c=[
	#case1: m=10000 9800
    [98,245,115,42],
    [98,211,123,38]
]
c = np.array(c)


x = cp.Variable((2,4),integer=True)
obj = cp.Maximize(-5*x[0,0]-10*x[1,0]-10*(x[0,1]+x[0,2]+x[0,3])-20*(x[1,1]+x[1,2]+x[1,3])+20000
                 +2.5*(x[0,0]-c[0,0]+x[0,1]-c[0,1]+x[0,2]-c[0,2]+x[0,3]-c[0,3])
                 +5*(x[1,0]-c[1,0]+x[1,1]-c[1,1]+x[1,2]-c[1,2]+x[1,3]-c[1,3]))
cons = [
    3*x[0,0]+2*x[1,0]<=1200,
    5*x[0,0]+10*x[1,0]<=10000,
    x[0,0]-c[0,0]>=0,
    x[0,0]-c[0,0]+x[0,1]-c[0,1]>=0,
    x[0,0]-c[0,0]+x[0,1]-c[0,1]+x[0,2]-c[0,2]>=0,
    x[0,0]-c[0,0]+x[0,1]-c[0,1]+x[0,2]-c[0,2]+x[0,3]-c[0,3]>=0,
    x[1,0]-c[1,0]>=0,
    x[1,0]-c[1,0]+x[1,1]-c[1,1]>=0,
    x[1,0]-c[1,0]+x[1,1]-c[1,1]+x[1,2]-c[1,2]>=0,
    x[1,0]-c[1,0]+x[1,1]-c[1,1]+x[1,2]-c[1,2]+x[1,3]-c[1,3]>=0,
    
    3*(x[0,0]-c[0,0]+x[0,1])+2*(x[1,0]-c[1,0]+x[1,1])<=1200,
    3*(x[0,0]-c[0,0]+x[0,1]-c[0,1]+x[0,2])+2*(x[1,0]-c[1,0]+x[1,1]-c[1,1]+x[1,2])<=1200,
    3*(x[0,0]-c[0,0]+x[0,1]-c[0,1]+x[0,2]-c[0,2]+x[0,3])+2*(x[1,0]-c[1,0]+x[1,1]-c[1,1]+x[1,2]-c[1,2]+x[1,3])<=1200,
    x>=0
    
]
prob = cp.Problem(obj,cons)
prob.solve(solver = 'GLPK_MI')

print(x.value)
print(prob.value)